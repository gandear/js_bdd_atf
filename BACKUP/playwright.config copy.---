// playwright.config.js
import dotenv from 'dotenv';
import { defineConfig } from '@playwright/test';
import { defineBddProject } from 'playwright-bdd';

dotenv.config({ quiet: true });

const steps = ['src/steps/**/*.js', 'src/fixtures/index.js'];

const createUiBddProject = (name, browserName, outputDir) => ({
  ...defineBddProject({
    name,
    features: ['src/features/ui/**/*.feature'],
    steps,
    outputDir,
  }),
  metadata: { suite: 'UI' },
  use: { browserName },
});

const createApiBddProject = (name, outputDir) => ({
  ...defineBddProject({
    name,
    features: ['src/features/api/**/*.feature'],
    steps,
    outputDir,
  }),
  metadata: { suite: 'API' },
  use: {}, // fără browser
});

export default defineConfig({

  globalSetup: './src/setup/global-setup.js',
  globalTeardown: './src/setup/global-teardown.js',
  
  timeout: 30 * 1000,
  expect: { timeout: 5000 },
  fullyParallel: true,

   // Setează la null pentru a evita crearea automată
  outputDir: process.env.CI ? null : './test-results',
  reporter: [['list'], ['allure-playwright', { outputDir: 'allure-results' }]],
  use: { headless: true, screenshot: 'only-on-failure', trace: 'retain-on-failure' },
  outputDir: './test-results',
  

  projects: [
    createUiBddProject('chromium-bdd', 'chromium', '.features-gen/chromium'),
    createUiBddProject('firefox-bdd', 'firefox', '.features-gen/firefox'),
    createUiBddProject('webkit-bdd', 'webkit', '.features-gen/webkit'),
    createApiBddProject('api-bdd', '.features-gen/api'),
  ],
});

